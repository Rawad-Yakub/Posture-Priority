##Some useful things for the future:
## st.write_stream for outputting text generated by OpenAI
##
##
import streamlit as st ##1.12.0 originally

from streamlit_image_coordinates import streamlit_image_coordinates     ##manually select points for posture evaluation
from streamlit_image_comparison import image_comparison                 ##compare two postures
from streamlit_plotly_events import plotly_events                       ##interactively view data on graphs

import numpy as np
##import openai
import plotly.express as px                                             
import pandas as pd

import pymongo
from pymongo.mongo_client import MongoClient
from pymongo.server_api import ServerApi

import s3fs
from st_files_connection import FilesConnection

st.set_page_config(
    page_title="Posture Priority",
    page_icon="ðŸš¶",
    layout="centered",
    initial_sidebar_state='auto'
)

st.title('Posture Priority')



@st.cache_resource()
def init_connection():
    uri = "mongodb+srv://testuser:testuser@capstonedbv1.wzzhaed.mongodb.net/?retryWrites=true&w=majority&appName=CapstoneDBv1"# Create a new client and connect to the server
    return uri

client = MongoClient(init_connection(), server_api=ServerApi('1')) 

# Send a ping to confirm a successful connection  
try:
    client.admin.command('ping')
    print("Pinged your deployment. You successfully connected to MongoDB!")
except Exception as e:
    print(e)
    st.write("Connection to database failed. Invalid credentials")



##conn = st.connection('s3', type=FilesConnection)
##conn.read("posturepriorityawsbucket/abc123.png", input_format="png", ttl=600)
##st.image(test_photo)
##fs = s3fs.S3FileSystem(anon=False)
fs = s3fs.S3FileSystem(anon=False, key="AKIATCKAQM63ILL7CTVH", secret="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")
st.image(fs.open("posturepriorityawsbucket/abc123.png", mode='rb').read())



##temp vars for class or similar
loggedIn = False
dailyPhotoUpload = False


if not loggedIn:
    st.subheader("Log in or sign up to get started")
    st.page_link("pages/Login.py", label="Log in here", icon="ðŸ’¾")
    

elif not dailyPhotoUpload:
    st.subheader("Upload a photo for today")
else:
    st.subheader("Welcome back!")






##print(client.list_database_names())

##@st.cache_resource()
##def init_connection():
##    return MongoClient("mongodb+srv://st.secrets.db_username:st.secrets.db_pswd@st.secrets.cluster_name.n4ycr4f.mongodb.net/?retryWrites=true&w=majority")

##client = init_connection()
    
